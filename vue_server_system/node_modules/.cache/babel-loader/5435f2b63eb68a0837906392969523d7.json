{"remainingRequest":"D:\\desk\\vue_server_system\\node_modules\\babel-loader\\lib\\index.js!D:\\desk\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\desk\\vue_server_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\desk\\vue_server_system\\src\\views\\system\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\desk\\vue_server_system\\src\\views\\system\\User.vue","mtime":1685258981622},{"path":"D:\\desk\\vue_server_system\\babel.config.js","mtime":1679550857243},{"path":"D:\\desk\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\desk\\vue_server_system\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\desk\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\desk\\vue_server_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["data","defaultProps","children","label","roleTreeData","dislogRoleFormVisbible","selection","dialogFormVisible","tableData","total","size","current","deleteAllBtnStu","searchForm","username","UserForm","avatar","email","tel","statu","headers","token","localStorage","getItem","rules","required","message","trigger","mounted","loadUserList","filters","fmtDate","value","date","Date","y","getFullYear","M","getMonth","toString","padStart","d","getDate","h","getHours","m","getMinutes","s","getSeconds","methods","submitUserRoleForm","roleIds","$refs","roleTree","getCheckedKeys","$axios","post","id","then","response","$message","type","showClose","onClose","UserDiaogClose","resetForm","roleHandle","get","user","resultdata","roles","forEach","r","push","console","log","setCheckedKeys","handlerSizeChange","val","handlerCurrentChange","resetPass","name","$confirm","confirmButtonText","concelButtonText","_","editUser","params","records","deleteUser","ids","u","searchUserInfo","handleClose","handleAvatarSuccess","file","submitForm","formName","validate","valid","selectionChange","length"],"sources":["src/views/system/User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 页面工具条表单 -->\r\n    <el-form ref=\"form\" :model=\"searchForm\" :inline=\"true\">\r\n      <el-form-item>\r\n        <el-input v-model=\"searchForm.username\" placeholder=\"请输入要搜索的用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button @click=\"loadUserList\">搜索</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogFormVisible=true\" v-if=\"hasAuth('sys:user:save')\">新建</el-button>\r\n\r\n        <el-popconfirm title=\"确认要批量删除用户信息吗？\" @confirm=\"deleteUser\">\r\n          <el-button slot=\"reference\" type=\"danger\" :disabled=\"deleteAllBtnStu\" v-if=\"hasAuth('sys:user:delete')\">批量删除</el-button>\r\n        </el-popconfirm>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 显示用户信息表格  data表格显示的数据 -->\r\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%; margin-bottom:20px;\" :cell-style=\"{ padding:'2px'}\"\r\n              @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\" width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column label=\"头像\" width=\"55\">\r\n\r\n        <template slot-scope=\"scope\">\r\n          <el-avatar size=\"small\" :src=\"scope.row.avatar\"></el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"用户名\" width=\"120\" prop=\"username\">\r\n      </el-table-column>\r\n      <el-table-column label=\"角色\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- 取到 每一行显示的用户对象。 scope.row.roles角色数组 -->\r\n          <!-- <el-tag size=\"mini\">超级管理员</el-tag><el-tag size=\"mini\">普通用户</el-tag> -->\r\n          <el-tag size=\"mini\" v-for=\"(role,index) in scope.row.roles\" :key=\"role.id\" style=\"margin-right:2px;\">\r\n            {{ role.name }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"邮箱\" prop=\"email\" width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column label=\"电话\" prop=\"tel\" width=\"140\">\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"70\" prop=\"statu\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- 取出当前这一行显示用户的状态： scope.row.statu -->\r\n          <!-- <el-tag size=\"mini\" type=\"success\">正常</el-tag> -->\r\n          <el-tag size=\"mini\" v-if=\"scope.row.statu===1\" type=\"success\">正常</el-tag>\r\n          <el-tag size=\"mini\" v-else-if=\"scope.row.statu===0\" type=\"danger\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"创建时间\" prop=\"created\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.created | fmtDate }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" @click=\"roleHandle(scope.row.id)\" v-if=\"hasAuth('sys:user:role')\">分配角色</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"text\" @click=\"editUser(scope.row.id)\" v-if=\"hasAuth('sys:user:update')\">编辑</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"text\" @click=\"resetPass(scope.row.id,scope.row.username)\" v-if=\"hasAuth('sys:user:repass')\">重置密码</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n\r\n          <el-popconfirm title=\"确认要删除该用户信息吗？\" @confirm=\"deleteUser(scope.row.id)\" v-if=\"hasAuth('sys:user:delete')\">\r\n            <el-button slot=\"reference\" type=\"text\">删除</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n\r\n    <!-- 显示分页页码 -->\r\n    <el-pagination background layout=\"total, sizes,prev, pager,next,jumper\" :total=\"total\" :page-size=\"size\"\r\n                   :page-sizes=\"[5,10,15,20,25]\" :current-page=\"current\"\r\n                   @size-change=\"handlerSizeChange\"\r\n                   @current-change=\"handlerCurrentChange\">\r\n    </el-pagination>\r\n\r\n\r\n    <!-- 新建用户和编辑用户的对话框 -->\r\n    <el-dialog title=\"用户信息\" :visible.sync=\"dialogFormVisible\" width=\"600px\" :before-close=\"handleClose\">\r\n      <el-form :model=\"UserForm\" ref=\"UserForm\" label-width=\"100px\" :rules=\"rules\">\r\n        <el-form-item label=\"用户头像\" label-width=\"100px\">\r\n          <el-upload class=\"avatar-uploader\" action=\"/api/oss/uploadOneFile\" :show-file-list=\"false\"\r\n                     :on-success=\"handleAvatarSuccess\" :headers=\"headers\">\r\n\r\n            <img v-if=\"UserForm.avatar\" :src=\"UserForm.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"username\">\r\n          <el-input v-model=\"UserForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" label-width=\"100px\" prop=\"email\">\r\n          <el-input v-model=\"UserForm.email\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" label-width=\"100px\" prop=\"tel\">\r\n          <el-input v-model=\"UserForm.tel\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" label-width=\"100px\">\r\n          <el-radio-group v-model=\"UserForm.statu\">\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n            <el-radio :label=\"1\">正常</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('UserForm')\" v-if=\"hasAuth('sys:user:save')\">保存用户</el-button>\r\n          <el-button @click=\"resetForm('UserForm')\" v-if=\"hasAuth('sys:user:save')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 分配角色对话框 -->\r\n    <el-dialog title=\"分配角色\" :visible.sync=\"dislogRoleFormVisbible\" width=\"500px\" :before-close=\"UserDiaogClose\">\r\n      <el-form :model=\"UserForm\">\r\n        <el-tree :data=\"roleTreeData\" show-checkbox ref=\"roleTree\" node-key=\"id\" :check-strictly=\"true\" :default-expand-all=\"true\" :props=\"defaultProps\">\r\n\r\n        </el-tree>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitUserRoleForm()\">确定</el-button>\r\n          <el-button @click=\"resetForm()\">重置</el-button>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n//所有的角色的信息数组:\r\n      roleTreeData: [],\r\n//给用户分配的角色表单对象\r\n      dislogRoleFormVisbible: false,\r\n\r\n      //复选框选中的用户数据对象\r\n      selection: [],\r\n      //是否显示新建用户的对话框\r\n      dialogFormVisible: false,\r\n      //用户表格显示的数据：  用户对象数据：就是数据库表字段\r\n      tableData: [],\r\n      //用户数据显示 分页相关数据\r\n      total: 0,  //分页显示：用户的总记录数\r\n      size: 10,   //分页显示：一页显示的记录数\r\n      current: 1,  //分页显示：当前显示的页码，就是第几页\r\n\r\n      // //批量删除按钮是否可用  只要有选中复选框，改变值为 false\r\n      deleteAllBtnStu: true,\r\n      // //搜索栏对象\r\n      searchForm: {\r\n        username: ''\r\n      },\r\n      // //新建用户的表单对象\r\n      UserForm: {\r\n        avatar: '',  //头像\r\n        username: '',\r\n        email: '',\r\n        tel: '',\r\n        statu: 1,\r\n      },\r\n      // //针对于上传头像对服务器的请求，需要设置请求头 携带token\r\n      headers: {\r\n        token: localStorage.getItem('token')\r\n      },\r\n      rules: {\r\n        username: [\r\n          //非空验证\r\n          {required: true, message: '请输入用户名', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请输入邮箱地址', trigger: 'blur'}\r\n        ],\r\n        tel: [\r\n          {required: true, message: '请输手机号', trigger: 'blur'},\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadUserList();\r\n  },\r\n  filters: {\r\n    fmtDate: (value) => {  //传递进来日期是一个字符串类型，不是日期对象\r\n      let date = new Date(value)  //将value中的日期字符串  转换为 日期对象date\r\n      let y = date.getFullYear()\r\n      let M = (date.getMonth() + 1).toString().padStart(2, '0')\r\n      let d = date.getDate().toString().padStart(2, '0')\r\n\r\n      let h = date.getHours().toString().padStart(2, '0')\r\n      let m = date.getMinutes().toString().padStart(2, '0')\r\n      let s = date.getSeconds().toString().padStart(2, '0')\r\n\r\n      //2023年09月09日 22:11:00\r\n      //ES6 拼接占位符  y+'年'+M+'月'\r\n      return `${y}年${M}月${d}日 ${h}:${m}:${s}`\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    submitUserRoleForm () {\r\n//获得所设置角色所有的id，从Tree控件获得选中角色ID\r\n      let roleIds = this.$refs.roleTree.getCheckedKeys();\r\n//分配角色需要保存到用户中：\r\n//请求服务器端参数1：用户id，参数2：保存角色的ids\r\n      this.$axios.post('/system/user/role/' + this.UserForm.id, roleIds)\r\n          .then(response => {\r\n            this.$message({\r\n              message: '用户权限数据分配成功',\r\n              type: 'success',\r\n              showClose: true,\r\n//定义一个关闭消息框回调： 需要重新加载用户的数据\r\n              onClose: () => {\r\n                this.UserDiaogClose();\r\n                this.loadUserList()\r\n              }\r\n            });\r\n          })\r\n    },\r\n\r\n    //重置新建用户的表单方法\r\n    resetForm() {\r\n      this.UserForm = {}\r\n      // this.$refs[formName].resetFields();  //重置表单  为默认值\r\n    },\r\n\r\n    UserDiaogClose() {\r\n      this.UserForm = {};\r\n      this.dislogRoleFormVisbible = false;\r\n    },\r\n\r\n    //分配角色方法\r\n    roleHandle(id) {\r\n      //根据用户id，获得该用户的 角色信息。\r\n      this.$axios.get('/system/user/info/' + id)\r\n          .then(response => {\r\n            let user = response.data.resultdata; //user对象包含 当前用户的信息和具有角色信息\r\n            this.UserForm = user\r\n//获得当前这个用户 目前的角色信息\r\n            let roleIds = [] //存储当前用户 角色id\r\n//如果当前用户具有角色信息，就循环得到角色的id\r\n            if (user.roles) {\r\n              user.roles.forEach(r => {\r\n//存储当前用户 角色id\r\n                roleIds.push(r.id)\r\n              })\r\n              console.log('角色id', roleIds);\r\n//设置Tree控件 按照roleIds中的角色id显示选中的角色\r\n            }\r\n//如果roleIds数组为[]。那么设置这个用户的Tree控件中所有角色都不会被选中。\r\n            this.$refs.roleTree.setCheckedKeys(roleIds);\r\n          })\r\n      this.dislogRoleFormVisbible = true //设置true，对话框显示\r\n    },\r\n\r\n    //【分页方法】：修改一页显示的记录数 val参数就是切换的一个最新个数\r\n    handlerSizeChange(val) {\r\n      this.size = val\r\n      this.loadUserList() //重新加载角色的数据\r\n    },\r\n//【分页方法】：切换页码，请求新一页数据\r\n    handlerCurrentChange(val) { //参数val 就是点击的新的页码\r\n      this.current = val\r\n      this.loadUserList()\r\n    },\r\n\r\n\r\n    //重置用户密码\r\n    resetPass(id, name) {\r\n      this.$confirm('重置用户【' + name + '】的密码，是否继续执行该操作', '重置密码操作',\r\n          {\r\n            confirmButtonText: '确定',\r\n            concelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n      )\r\n          .then(_ => {\r\n            //请求服务器重置该用户的密码:\r\n            this.$axios.post('/system/user/repass', id).then((response) => {\r\n              this.$message({\r\n                message: response.data.message,\r\n                type: 'success',\r\n                showClose: true,\r\n              });\r\n            })\r\n          })\r\n    },\r\n    //编辑用户的方法：  参数：要编辑的用户编号 id\r\n    //编辑用户的方法： 参数：要编辑的用户编号 id\r\n    editUser(id) {\r\n//使用用户的编号 传递到服务器端， 进行查询该用户信息，返回用户信息，回显保存用户的对话框中。\r\n      this.$axios('/system/user/info/' + id).then(response => {\r\n        this.UserForm = response.data.resultdata //将服务器返回的用户数据赋值给this.UserForm对象，this.UserFormd对象数据是和表单控件双向数据绑定。\r\n        this.dialogFormVisible = true //显示对话框\r\n      })\r\n    },\r\n\r\n    //请求服务器，加载所有用户的数据\r\n    //如果是分页显示数据，Java服务器的代码中就需要获得分页参数。例如，传递给服务器，我要显示第几页。\r\n    loadUserList() {\r\n      this.$axios.get('/system/user/list', {\r\n        params: {\r\n          username: this.searchForm.username,\r\n          current: this.current,\r\n          size: this.size\r\n        }\r\n      }).then(response => {\r\n        this.tableData = response.data.resultdata.records\r\n        // console.log(response.data.resultdata)\r\n        this.total = response.data.resultdata.total\r\n        this.size = response.data.resultdata.size\r\n        this.current = response.data.resultdata.current\r\n      })\r\n\r\n      //请求服务器端，获得所有的角色信息，给到Tree控件\r\n      this.$axios.get('/system/role/list').then(response => {\r\n        this.roleTreeData = response.data.resultdata.records;\r\n        // console.log(this.roleTreeData)\r\n      })\r\n    },\r\n    //删除用户和批量删除用户的方法  参数 用户编号 id\r\n    deleteUser(id) {\r\n      //单个删除用户和批量删除用户\r\n      //如果id有值，表示单个删除，如果id没有值，表示进行批量删除（批量删除用户数据 this.selection）。\r\n      let ids = [];  //表示要删除的一组用户的id\r\n      id ? ids.push(id) : this.selection.forEach(u => {\r\n        ids.push(u.id)\r\n      })\r\n\r\n      //ids存储就是单个删除的用户ID，或者批量删除的用户ID  GET POST PUT DELETE\r\n      this.$axios.post('/system/user/delete', ids).then(response => {\r\n        this.$message({\r\n          message: response.data.message,\r\n          type: 'success',\r\n          showClose: true,\r\n          //定义一个关闭消息框回调： 需要重新加载用户的数据\r\n          onClose: () => {\r\n            this.loadUserList()\r\n          }\r\n        });\r\n      })\r\n    },\r\n    //搜索用户信息\r\n    searchUserInfo() {\r\n\r\n    },\r\n    //关闭新建用户对话框之前，进行操作\r\n    handleClose() {\r\n      //因为对话框中其实 是一个新建用户的表单---关闭对话框前，重置新建用户的表单\r\n      // this.resetForm('UserForm')\r\n      this.UserForm = {}\r\n      this.dialogFormVisible = false\r\n    },\r\n    //用户头像上传成功回调\r\n    handleAvatarSuccess (response, file) {\r\n      console.log(response.resultdata);\r\n//axios使用请求then()回调，取数据必须是：response.data.resultdata\r\n//这里没有使用axios，所以返回response取数据，直接取response.resultdata\r\n//使用上传控件，上传头像成功，服务器返回一个 上传后的图片的网络地址。\r\n      this.UserForm.avatar = response.resultdata\r\n    },\r\n    //提交 新建用户的表单方法/system/user/save    更新用户的操作/system/user/update\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          //提交保存新建用户数据： 不包括用户头像\r\n          //this.UserForm.id 如果进行新建用户，那么新建用户只有提交服务器保存到数据库中，数据库id这个主键列才会自增，this.UserForm.id才会有值。\r\n          //this.userForm.id如果有值，那么就是更新操作，因为在editUser方法中已经通过 点击编辑 按钮，将要编辑的用户id传递给服务器查询该用户的所有信息\r\n          this.$axios.post('/system/user/' + (this.UserForm.id ? 'update' : 'save'), this.UserForm)\r\n              .then(response => {\r\n                this.$message({\r\n                  message: response.data.message,\r\n                  type: 'success',\r\n                  showClose: true,\r\n                  onClose: () => {\r\n                    this.loadUserList() //新建用户成功后，需要重新加载用户数据\r\n                    this.dialogFormVisible = false  //用户保存成功，对话框隐藏\r\n                    this.resetForm(formName)   //用户保存成功，表单重置\r\n                  }\r\n                });\r\n              })\r\n        }\r\n      })\r\n    },\r\n\r\n    //选中表格中复选框  参数value就是选中行对象（选中行 的用户数据）  返回一个数组。\r\n    selectionChange(value) {\r\n      this.selection = value;  //selection数组中存放就是选中所有的用户对象数据\r\n      if (this.selection) {\r\n        //如果selection数组中有数据，代表页面上是有选中的用户的。就修改批量删除为可用  deleteAllBtnStu\r\n        this.deleteAllBtnStu = (this.selection.length === 0)   //直接给false，或者判断数组如果长度为0，表示没有数据，赋值true(不可用)\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 上传用户头像控件的样式 */\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px solid #666;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}