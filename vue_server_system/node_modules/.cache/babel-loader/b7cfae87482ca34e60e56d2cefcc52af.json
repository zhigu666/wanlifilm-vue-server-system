{"remainingRequest":"D:\\vue_workspace\\vue_server_system\\node_modules\\babel-loader\\lib\\index.js!D:\\vue_workspace\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\vue_workspace\\vue_server_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_workspace\\vue_server_system\\src\\views\\system\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue_workspace\\vue_server_system\\src\\views\\system\\User.vue","mtime":1680672302427},{"path":"D:\\vue_workspace\\vue_server_system\\babel.config.js","mtime":1679550448295},{"path":"D:\\vue_workspace\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\vue_server_system\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\vue_workspace\\vue_server_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\vue_server_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy/lpI3pgInmoYbpgInkuK3nmoTnlKjmiLfmlbDmja7lr7nosaEKICAgICAgc2VsZWN0aW9uOiBbXSwKICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICAvL+eUqOaIt+ihqOagvOaYvuekuueahOaVsOaNrgogICAgICB0YWJsZURhdGE6IFtdLAogICAgICAvL+eUqOaIt+aVsOaNruaYvuekuuWIhumhteebuOWFs+aVsOaNrgogICAgICB0b3RhbDogMTAsCiAgICAgIC8v5YiG6aG15pi+56S65oC76K6w5b2V5pWwCiAgICAgIHNpemU6IDEwLAogICAgICAvL+WNlemhteiusOW9leaVsAogICAgICBjdXJyZW50OiAxLAogICAgICAvL+W9k+WJjemhteeggQoKICAgICAgLy/mibnph4/liKDpmaTmjInpkq7mmK/lkKblj6/nlKgg5Y+q6KaB5pyJ6YCJ5Lit55qE5aSN6YCJ5qGG77yM5YiZ5pS55Li65Y+v55SoCiAgICAgIGRlbGV0ZUFsbEJ0blN0dTogdHJ1ZSwKICAgICAgLy/mkJzntKLmoI/lr7nosaEKICAgICAgc2VhcmNoRm9ybTogewogICAgICAgIHVzZXJuYW1lOiAnJwogICAgICB9LAogICAgICAvL+aWsOW7uueUqOaIt+eahOihqOWNleWvueixoQogICAgICBVc2VyRm9ybTogewogICAgICAgIC8vIGF2YXRhcjogJycsCiAgICAgICAgLy8gdXNlcm5hbWU6ICcnLAogICAgICAgIC8vIGVtYWlsOiAnJywKICAgICAgICAvLyB0ZWw6ICcnLAogICAgICAgIC8vIHN0YXR1OiAxLAogICAgICB9LAogICAgICAvL+S4iuS8oOWktOWDj+WvueacjeWKoeWZqOeahOivt+axgu+8jOmcgOimgeiuvue9ruivt+axguWktOW4pnRva2VuCiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAvLyB0b2tlbjp0aGlzLiRnZXRTZXNzaW9uU3RvcmFnZSgndG9rZW4nKQogICAgICAgIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKQogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIHVzZXJuYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl55So5oi35ZCNJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIGVtYWlsOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6YKu566x5Zyw5Z2AJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHRlbDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeaJi+acuuWPtycsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBzdGF0dTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+eahOeKtuaAgScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czoge30sCiAgLy9jcmVhdGVkCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZFVzZXJMaXN0KCk7CiAgfSwKICBmaWx0ZXJzOiB7CiAgICBmbXREYXRlOiB2YWx1ZSA9PiB7CiAgICAgIGxldCBkYXRlID0gbmV3IERhdGUodmFsdWUpOwogICAgICBsZXQgeSA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgbGV0IE0gPSAoZGF0ZS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICBsZXQgZCA9IGRhdGUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgbGV0IGggPSBkYXRlLmdldEhvdXJzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICBsZXQgbSA9IGRhdGUuZ2V0TWludXRlcygpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgbGV0IHMgPSBkYXRlLmdldFNlY29uZHMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICAgIHJldHVybiBgJHt5feW5tCR7TX3mnIgke2R95pelICR7aH06JHttfToke3N9YDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8v6YeN572u55So5oi35a+G56CBCiAgICByZXN0UGFzcyhpZCwgbmFtZSkgewogICAgICB0aGlzLiRjb25maXJtKCfph43nva7nlKjmiLdbJyArIG5hbWUgKyAnXeeahOWvhueggSzmmK/lkKbnu6fnu63miafooYzor6Xmk43kvZwnLCAn6YeN572u5a+G56CB5pON5L2cJywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjb25jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbihfID0+IHsKICAgICAgICAvL+mHjee9ruWvhueggQogICAgICAgIHRoaXMuJGF4aW9zLnBvc3QoJy9zeXN0ZW0vdXNlci9yZXBhc3MnLCBpZCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v57yW6L6R55So5oi35pa55rOVCiAgICBlZGl0VXNlcihpZCkgewogICAgICAvL+S9v+eUqGlk6L+b6KGM5p+l6K+iLOi/lOWbnueUqOaIt+S/oeaBr++8jOWbnuaYvuWIsOeUqOaIt+WvueivneahhgogICAgICB0aGlzLiRheGlvcygnL3VzZXIvdXNlcmluZm8vJyArIGlkKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLlVzZXJGb3JtID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRkYXRhOyAvL+WwhuacjeWKoeWZqOi/lOWbnueahOeUqOaIt+aVsOaNrui1i+WAvOe7mXVzZXJmb3JtCiAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWU7CiAgICAgIH0pOwogICAgfSwKICAgIC8v6YCJ5Lit6KGo5qC85Lit55qE5aSN6YCJ5qGGCiAgICBzZWxlY3Rpb25DaGFuZ2UodmFsdWUpIHsKICAgICAgLy92YWx1ZeS4uumAieS4reeahOWvueixoQogICAgICB0aGlzLnNlbGVjdGlvbiA9IHZhbHVlOwogICAgICBpZiAodGhpcy5zZWxlY3Rpb24pIHsKICAgICAgICAvL+WmguaenOaVsOaNruS4reacieaVsOaNru+8jOS7o+ihqOaciemAieS4reeahOeUqOaIt++8jOWwseS/ruaUueaJuemHj+WIoOmZpOS4uuWPr+eUqAogICAgICAgIHRoaXMuZGVsZXRlQWxsQnRuU3R1ID0gdGhpcy5zZWxlY3Rpb24ubGVuZ3RoID09PSAwOwogICAgICB9CiAgICB9LAogICAgLy/or7fmsYLmnI3liqHlmajvvIzliqDovb3nlKjmiLfmlbDmja4KICAgIGxvYWRVc2VyTGlzdCgpIHsKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvc3lzdGVtL3VzZXIvbGlzdCcsIHsKICAgICAgICBjdXJyZW50OiB0aGlzLmN1cnJlbnQsCiAgICAgICAgLy/opoHor7fmsYLmmL7npLrnrKzlh6DpobUKICAgICAgICBzaXplOiB0aGlzLnNpemUgLy/opoHor7fmsYLkuIDpobXmmL7npLrlpJrlsJHmnaEKICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgLy/ojrflvpfliIbpobXnlKjmiLfkv6Hmga8KICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlc3BvbnNlLmRhdGEucmVzdWx0ZGF0YS5yZWNvcmRzOwogICAgICAgIC8v6I635b6X5pyN5Yqh5Zmo5Y+R5Zue55qE5YiG6aG155u45YWz5pWw5o2uCiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEucmVzdWx0ZGF0YS50b3RhbDsKICAgICAgICB0aGlzLnNpemUgPSByZXNwb25zZS5kYXRhLnJlc3VsdGRhdGEuc2l6ZTsKICAgICAgICB0aGlzLmN1cnJlbnQgPSByZXNwb25zZS5kYXRhLnJlc3VsdGRhdGEuY3VycmVudDsKICAgICAgfSk7CiAgICB9LAogICAgLy/liKDpmaTnlKjmiLcKICAgIGRlbGV0ZVVzZXIoaWQpIHsKICAgICAgLy/ljZXkuKrnlKjmiLfov5vooYzliKDpmaTlkozmibnph4/liKDpmaQKICAgICAgLy/lj6rmnInkuIDkuKppZOihqOekuuWNleS4quWIoOmZpCzlpoLmnpxpZOayoeacieWAvO+8jOihqOekuuaJuemHj+WIoOmZpAogICAgICBsZXQgaWRzID0gW107IC8v6KaB5Yig6Zmk55qE5LiA57uE5pWw5o2u55qEaWQKICAgICAgaWQgPyBpZHMucHVzaChpZCkgOiB0aGlzLnNlbGVjdGlvbi5mb3JFYWNoKHUgPT4gewogICAgICAgIGlkcy5wdXNoKHUuaWQpOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coaWRzKTsKICAgICAgLy9pZHPmmK/opoHliKDpmaTnmoRpZAogICAgICB0aGlzLiRheGlvcy5wb3N0KCcvc3lzdGVtL3VzZXIvZGVsZXRlJywgaWRzKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEubWVzc2FnZSwKICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgIGR1cmF0aW9uOiAxMjAwLAogICAgICAgICAgb25DbG9zZTogKCkgPT4gewogICAgICAgICAgICB0aGlzLmxvYWRVc2VyTGlzdCgpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+aQnOe0oueUqOaIt+S/oeaBrwogICAgc2VhcmNoVXNlckluZm8oKSB7fSwKICAgIC8vIOWFs+mXreaWsOW7uueUqOaIt+WvueivneahhuS5i+WJje+8jOi/m+ihjOaTjeS9nAogICAgaGFuZGxlQ2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKICAgICAgdGhpcy5yZXN0Rm9ybSgnVXNlckZvcm0nKTsKICAgIH0sCiAgICAvL+eUqOaIt+WktOWDj+S4iuS8oOaIkOWKn+WbnuiwgwogICAgaGFuZGxlQXZhdGFyU3VjY2VzcyhyZXNwb25zZSwgZmlsZSkgewogICAgICAvL+S9v+eUqOS4iuS8oOaOp+S7tuS4iuS8oOWktOWDj+aIkOWKnyzmnI3liqHlmajov5Tlm57kuIDkuKrlm77niYfkuIrkvKDlkI7nmoTlnLDlnYAKICAgICAgdGhpcy5Vc2VyRm9ybS5hdmF0YXIgPSByZXNwb25zZS5kYXRhOwogICAgfSwKICAgIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdGhpcy4kYXhpb3MucG9zdCgnL3N5c3RlbS91c2VyLycgKyAodGhpcy5Vc2VyRm9ybS5pZCA/ICd1cGRhdGUnIDogJ3NhdmUnKSwgdGhpcy5Vc2VyRm9ybSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEubWVzc2FnZSwKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEyMDAsCiAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5sb2FkVXNlckxpc3QoKTsKICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMucmVzdEZvcm0oZm9ybU5hbWUpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJlc3RGb3JtKGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuVXNlckZvcm0gPSB7fTsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0ucmVzZXRGaWVsZHMoKTsgLy/ph43nva7ooajljZXkuLrpu5jorqTlgLwKICAgIH0KICB9Cn07"},{"version":3,"names":["data","selection","dialogFormVisible","tableData","total","size","current","deleteAllBtnStu","searchForm","username","UserForm","headers","token","localStorage","getItem","rules","required","message","trigger","email","tel","statu","components","created","loadUserList","filters","fmtDate","value","date","Date","y","getFullYear","M","getMonth","toString","padStart","d","getDate","h","getHours","m","getMinutes","s","getSeconds","methods","restPass","id","name","$confirm","confirmButtonText","concelButtonText","type","then","_","$axios","post","response","$message","showClose","editUser","resultdata","selectionChange","length","get","records","deleteUser","ids","push","forEach","u","console","log","duration","onClose","searchUserInfo","handleClose","restForm","handleAvatarSuccess","file","avatar","submitForm","formName","$refs","validate","valid","resetFields"],"sources":["src/views/system/User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n<!--    搜索栏-->\r\n    <el-form ref=\"form\" :model=\"searchForm\" label-width=\"80px\" :inline=\"true\">\r\n      <el-form-item>\r\n        <el-input v-model=\"searchForm.username\" placeholder=\"请输入要搜索的用户名\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button @click=\"searchUserInfo\">搜索</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogFormVisible=true\">新建</el-button>\r\n        <el-popconfirm title=\"确认要批量删除用户信息吗？\" @confirm=\"deleteUser\">\r\n          <el-button slot=\"reference\" type=\"danger\" :disabled=\"deleteAllBtnStu\">批量删除</el-button>\r\n        </el-popconfirm>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!--      //用户信息表格  data显示的数据-->\r\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%; margin-bottom:20px;\"\r\n              :cell-style=\"{padding:'2px'}\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\" width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column label=\"头像\" width=\"55\">\r\n        <!--      头像  scope代表循环中的每一行-->\r\n        <template slot-scope=\"scope\">\r\n          <el-avatar size=\"small\" :src=\"scope.row.avatar\"></el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"用户名\" width=\"90\" prop=\"username\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"角色\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <!--        <el-tag size=\"mini\">超级管理员</el-tag>-->\r\n          <!--        <el-tag size=\"mini\">普通用户</el-tag>-->\r\n          <el-tag size=\"mini\" v-for=\"(role,index) in scope.row.roles\" :key=\"role.id\" style=\"margin-left:2px \">\r\n            {{ role.name }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"邮箱\" prop=\"email\" width=\"150\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"电话\" prop=\"tel\" width=\"140\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"状态\" width=\"70\" prop=\"statu\">\r\n        <template slot-scope=\"scope\">\r\n          <!--        <el-tag size=\"mini\" type=\"success\">正常</el-tag>-->\r\n          <el-tag size=\"mini\" v-if=\"scope.row.statu===1\" type=\"success\">正常</el-tag>\r\n          <el-tag size=\"mini\" v-else-if=\"scope.row.statu===0\" type=\"danger\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"创建时间\" width=\"200\" prop=\"created\">\r\n        <template slot-scope=\"scope\">\r\n          {{scope.row.created | fmtDate}}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\">分配角色</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"text\" @click=\"editUser(scope.row.id)\">编辑</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button type=\"text\" @click=\"restPass(scope.row.id,scope.row.username)\">重置密码</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n\r\n          <el-popconfirm title=\"确认要删除该用户信息吗？\" @confirm=\"deleteUser(scope.row.id)\">\r\n            <el-button slot=\"reference\" type=\"text\">删除</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!--分页页码-->\r\n    <el-pagination layout=\"total,sizes,prev, pager, next,jumper\" :total=\"total\" :page-size=\"size\"\r\n                   :page-sizes=\"[5,10,15,20,25]\" :current-page=\"current\">\r\n    </el-pagination>\r\n\r\n    <!--    新建用户和编辑用户的对话框-->\r\n    <el-dialog title=\"用户信息\" :visible.sync=\"dialogFormVisible\" width=\"600px\" :before-close=\"handleClose\">\r\n      <el-form :model=\"UserForm\" ref=\"UserForm\" label-width=\"100px\" :rules=\"rules\">\r\n        <el-form-item label=\"用户头像\" label-width=\"100px\">\r\n          <el-upload class=\"avatar-uploader\"\r\n                     action=\"/api/uploader\"\r\n                     :show-file-list=\"false\"\r\n                     :on-success=\"handleAvatarSuccess\"\r\n                     :headers=\"headers\">\r\n            <img v-if=\"UserForm.avatar\" :src=\"UserForm.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"username\">\r\n          <el-input v-model=\"UserForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" label-width=\"100px\" prop=\"email\">\r\n          <el-input v-model=\"UserForm.email\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" label-width=\"100px\" prop=\"tel\">\r\n          <el-input v-model=\"UserForm.tel\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" label-width=\"100px\" prop=\"statu\">\r\n          <el-radio-group v-model=\"UserForm.statu\">\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n            <el-radio :label=\"1\">正常</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('UserForm')\">保存用户</el-button>\r\n          <el-button @click=\"restForm('UserForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n\r\n      //复选框选中的用户数据对象\r\n      selection: [],\r\n      dialogFormVisible: false,\r\n      //用户表格显示的数据\r\n      tableData: [],\r\n\r\n      //用户数据显示分页相关数据\r\n      total: 10,//分页显示总记录数\r\n      size: 10,//单页记录数\r\n      current: 1,//当前页码\r\n\r\n      //批量删除按钮是否可用 只要有选中的复选框，则改为可用\r\n      deleteAllBtnStu: true,\r\n      //搜索栏对象\r\n      searchForm: {\r\n        username: '',\r\n      },\r\n      //新建用户的表单对象\r\n      UserForm: {\r\n        // avatar: '',\r\n        // username: '',\r\n        // email: '',\r\n        // tel: '',\r\n        // statu: 1,\r\n      },\r\n      //上传头像对服务器的请求，需要设置请求头带token\r\n      headers: {\r\n        // token:this.$getSessionStorage('token')\r\n        token: localStorage.getItem('token')\r\n      },\r\n      rules: {\r\n        username: [{required: true, message: '请输入用户名', trigger: 'blur'}],\r\n        email: [{required: true, message: '请输入邮箱地址', trigger: 'blur'}],\r\n        tel: [{required: true, message: '请输入手机号', trigger: 'blur'}],\r\n        statu:[{required:true,message:'请输入用户的状态',trigger:'blur'}],\r\n      }\r\n    }\r\n  },\r\n  components: {},\r\n\r\n  //created\r\n  created() {\r\n    this.loadUserList()\r\n  },\r\n  filters:{\r\n    fmtDate:(value)=>{\r\n      let date=new Date(value)\r\n      let y=date.getFullYear()\r\n      let M=(date.getMonth()+1).toString().padStart(2,'0')\r\n      let d=date.getDate().toString().padStart(2,'0')\r\n\r\n      let h=date.getHours().toString().padStart(2,'0')\r\n      let m=date.getMinutes().toString().padStart(2,'0')\r\n      let s=date.getSeconds().toString().padStart(2,'0')\r\n\r\n      return `${y}年${M}月${d}日 ${h}:${m}:${s}`\r\n    }\r\n  },\r\n  methods: {\r\n    //重置用户密码\r\n    restPass(id, name) {\r\n      this.$confirm('重置用户[' + name + ']的密码,是否继续执行该操作', '重置密码操作', {\r\n        confirmButtonText: '确定',\r\n        concelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n          .then(_ => {\r\n            //重置密码\r\n            this.$axios.post('/system/user/repass',id)\r\n            .then((response)=>{\r\n              this.$message({\r\n                message: response.data.message,\r\n                type: \"success\",\r\n                showClose: true,\r\n              })\r\n            })\r\n          })\r\n    },\r\n    //编辑用户方法\r\n    editUser(id) {\r\n      //使用id进行查询,返回用户信息，回显到用户对话框\r\n      this.$axios('/user/userinfo/' + id).then(response => {\r\n        this.UserForm = response.data.resultdata //将服务器返回的用户数据赋值给userform\r\n        this.dialogFormVisible = true\r\n      })\r\n    },\r\n    //选中表格中的复选框\r\n    selectionChange(value) {//value为选中的对象\r\n      this.selection = value;\r\n      if (this.selection) {\r\n        //如果数据中有数据，代表有选中的用户，就修改批量删除为可用\r\n        this.deleteAllBtnStu = (this.selection.length === 0)\r\n      }\r\n    },\r\n    //请求服务器，加载用户数据\r\n    loadUserList() {\r\n      this.$axios.get('/system/user/list',\r\n          {\r\n            current: this.current,//要请求显示第几页\r\n            size: this.size,//要请求一页显示多少条\r\n          }\r\n      ).then(response => {\r\n        //获得分页用户信息\r\n        this.tableData = response.data.resultdata.records\r\n        //获得服务器发回的分页相关数据\r\n        this.total = response.data.resultdata.total\r\n        this.size = response.data.resultdata.size\r\n        this.current = response.data.resultdata.current\r\n      })\r\n    },\r\n\r\n    //删除用户\r\n    deleteUser(id) {\r\n      //单个用户进行删除和批量删除\r\n      //只有一个id表示单个删除,如果id没有值，表示批量删除\r\n      let ids = [];//要删除的一组数据的id\r\n      id ? ids.push(id) : this.selection.forEach(u => {\r\n        ids.push(u.id)\r\n      })\r\n      console.log(ids)\r\n      //ids是要删除的id\r\n      this.$axios.post('/system/user/delete', ids).then(response => {\r\n        this.$message({\r\n          message: response.data.message,\r\n          type: \"success\",\r\n          duration:1200,\r\n          onClose: () => {\r\n            this.loadUserList()\r\n          }\r\n        })\r\n      })\r\n    },\r\n\r\n    //搜索用户信息\r\n    searchUserInfo() {\r\n\r\n    },\r\n\r\n    // 关闭新建用户对话框之前，进行操作\r\n    handleClose() {\r\n      this.dialogFormVisible = false\r\n      this.restForm('UserForm')\r\n    },\r\n    //用户头像上传成功回调\r\n    handleAvatarSuccess(response, file) {\r\n      //使用上传控件上传头像成功,服务器返回一个图片上传后的地址\r\n      this.UserForm.avatar = response.data\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.$axios.post('/system/user/' + (this.UserForm.id ? 'update' : 'save'), this.UserForm)\r\n              .then(response => {\r\n                this.$message({\r\n                  message: response.data.message,\r\n                  type: \"success\",\r\n                  duration:1200,\r\n                  onClose: () => {\r\n                    this.loadUserList()\r\n                    this.dialogFormVisible = false\r\n                    this.restForm(formName)\r\n                  }\r\n                })\r\n              })\r\n        }\r\n      })\r\n    },\r\n    restForm(formName) {\r\n      this.UserForm={}\r\n      this.$refs[formName].resetFields()//重置表单为默认值\r\n    }\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/*<!--上传用户头像控件样式-->*/\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"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"}]}